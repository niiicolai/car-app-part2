name: Build, Test and Deploy

on:
  push:
    branches:
      - main
env:
  JDBC_DATABASE_URL2: ${{ secrets.JDBC_DATABASE_URL2 }}
  JDBC_PASSWORD: ${{ secrets.JDBC_PASSWORD }}
  JDBC_USERNAME: ${{ secrets.JDBC_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build with maven
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Build project
      run: |
        mvn -B -DskipTests clean install
  test:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Run tests
      run: |
        mvn test
  deploy:
    runs-on: ubuntu-22.04
    
    needs: [build, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and save Docker image
        run: |
          IMAGE_TAG=backend-client
          docker build -t $IMAGE_TAG .
          docker save $IMAGE_TAG > backend-client.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend-client
          path: backend-client.tar

      - name: Copy Docker Image to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: backend-client.tar
          target: /root/containers/

      - name: Start new container using the new image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop backend-client
            docker rm backend-client
            docker load < /root/containers/backend-client.tar
            docker run -d --name backend-client -p 8081:8081 backend-client
            exit
